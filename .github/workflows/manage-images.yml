name: Manage OCI Images

on:
  push:
    paths:
      - 'images.json'
      - 'nix/_dockerfiles/versions/**'
      - 'nix/_dockerfiles/pins/**'
      - '.github/workflows/manage-images.yml'
      - 'nix/scripts/manage-images.py'
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours

jobs:
  manage:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.PR_TOKEN || secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      
      - name: Build manage-images script
        run: |
          echo "Building manage-images script..."
          nix build .#manage-images
          echo "Build completed successfully"
      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files_yaml: |
            images:
              - images.json
              - .github/workflows/manage-images.yml
              - nix/scripts/manage-images.py
            versions:
              - nix/_dockerfiles/versions/**
            pins:
              - nix/_dockerfiles/pins/**
      
      - name: Determine which steps to run
        id: determine-steps
        run: |
          # Step 1 runs if images.json, workflow, or script changed
          if [[ "${{ steps.changed-files.outputs.images_any_changed }}" == "true" ]] || [[ "${{ github.event_name }}" == "workflow_dispatch" ]] || [[ "${{ github.event_name }}" == "schedule" ]]; then
            echo "run_step1=true" >> $GITHUB_OUTPUT
          else
            echo "run_step1=false" >> $GITHUB_OUTPUT
          fi
          
          # Step 2 runs if Step 1 conditions are met OR versions changed
          if [[ "${{ steps.changed-files.outputs.images_any_changed }}" == "true" ]] || \
             [[ "${{ steps.changed-files.outputs.versions_any_changed }}" == "true" ]] || \
             [[ "${{ github.event_name }}" == "workflow_dispatch" ]] || \
             [[ "${{ github.event_name }}" == "schedule" ]]; then
            echo "run_step2=true" >> $GITHUB_OUTPUT
          else
            echo "run_step2=false" >> $GITHUB_OUTPUT
          fi
          
          # Step 3 runs if Step 2 conditions are met OR pins changed
          if [[ "${{ steps.changed-files.outputs.images_any_changed }}" == "true" ]] || \
             [[ "${{ steps.changed-files.outputs.versions_any_changed }}" == "true" ]] || \
             [[ "${{ steps.changed-files.outputs.pins_any_changed }}" == "true" ]] || \
             [[ "${{ github.event_name }}" == "workflow_dispatch" ]] || \
             [[ "${{ github.event_name }}" == "schedule" ]]; then
            echo "run_step3=true" >> $GITHUB_OUTPUT
          else
            echo "run_step3=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Step 1 - Generate version Dockerfiles
        if: steps.determine-steps.outputs.run_step1 == 'true'
        run: |
          echo "Running Step 1: Generate version Dockerfiles"
          nix run .#manage-images -- generate-versions
      
      - name: Step 2 - Generate pin Dockerfiles
        if: steps.determine-steps.outputs.run_step2 == 'true'
        run: |
          echo "Running Step 2: Generate pin Dockerfiles"
          nix run .#manage-images -- generate-pins
      
      - name: Step 3 - Harvest digests
        if: steps.determine-steps.outputs.run_step3 == 'true'
        run: |
          echo "Running Step 3: Harvest digests"
          nix run .#manage-images -- harvest-digests
      
      - name: Check for changes
        id: check_changes
        run: |
          git add -A nix/_dockerfiles/
          git add digests.json
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changed files:"
            git status --porcelain
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          fi
      
      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        id: create-pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PR_TOKEN || secrets.GITHUB_TOKEN }}
          commit-message: "chore: update OCI image references"
          title: "chore: update OCI image references"
          body: |
            ## Automated OCI Image Update
            
            This PR contains automated updates to OCI image references:
            
            - Version Dockerfiles generated from `images.json`
            - Pin Dockerfiles created from version tags
            - Updated `digests.json` with latest image references
            
            ### Changes
            
            ```
            ${{ steps.check_changes.outputs.changed_files }}
            ```
            
            This PR will be automatically merged by Mergify if all checks pass.
          branch: update-oci-images
          delete-branch: true
          labels: |
            update
            digests
          assignees: ${{ github.actor }}